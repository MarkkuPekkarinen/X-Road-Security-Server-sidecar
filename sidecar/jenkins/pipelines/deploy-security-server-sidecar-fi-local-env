pipeline {
    agent { label 'dev-test' }
    stages {
        stage('Deploy Sidecar image with Finnish settings in Kubernetes local env') {
            steps {
                sh 'microk8s.kubectl apply -f sidecar/kubernetes/security-server-sidecar-fi.yaml'
            }
        }
        stage('Rollout status') {
            steps {
                sh 'microk8s.kubectl rollout status deployment.v1.apps/security-server-sidecar-fi'
            }
        }
        stage('Test') {
            steps {
                retry (5) {
                    sleep(time: 10, unit: 'SECONDS')
                    script {
                        def response = sh(script: 'curl --write-out %{http_code} --silent --output /dev/null --insecure https://$(microk8s.kubectl get pods -l run=security-server-sidecar-fi -o jsonpath={.items[].status.podIP}):4000', returnStdout: true)
                        if(response == '302') {
                            echo '========> Security server is successfully running'
                            currentBuild.result = 'SUCCESS'
                        } else {
                            error("========> Security server returned " + response + " . Try again in 10s")
                        }

                    }
                }
            }
        }
    }
    post {
        always {
            sh 'microk8s.kubectl delete -f sidecar/kubernetes/security-server-sidecar-fi.yaml'
        }
    }
}
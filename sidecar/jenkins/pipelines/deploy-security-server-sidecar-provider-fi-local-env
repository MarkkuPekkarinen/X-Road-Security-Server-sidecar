pipeline {
    agent any
    parameters {
        string(description: "Cluster name", name: "CLUSTER_NAME", defaultValue: "${params?.CLUSTER_NAME}")
        string(description: "Token code for MFA login", name: "TOKEN_CODE", defaultValue: "${params?.TOKEN_CODE}")
    }
    stages {
        stage('Apply cluster configuration') {
            steps {
                sh '''
                    unset AWS_SESSION_TOKEN
                    unset AWS_SECRET_ACCESS_KEY
                    unset AWS_ACCESS_KEY_ID

                    CREDENTIALS=`aws sts get-session-token --serial-number arn:aws:iam::942718799483:mfa/raul.martinez --token-code $TOKEN_CODE`

                    export AWS_ACCESS_KEY_ID=`echo $CREDENTIALS | jq -r '.Credentials.AccessKeyId'`
                    export AWS_SECRET_ACCESS_KEY=`echo $CREDENTIALS | jq -r '.Credentials.SecretAccessKey'`
                    export AWS_SESSION_TOKEN=`echo $CREDENTIALS | jq -r '.Credentials.SessionToken'`

                    aws eks --region eu-west-1 update-kubeconfig --name ${CLUSTER_NAME}
                '''
            }
        }
        stage('Build X-Road Security Server Sidecar image') {
            steps {
                sh 'kubectl apply -f sidecar/kubernetes/security-server-sidecar-provider-fi.yaml'
            }
        }
        stage('Rollout status') {
            steps {
                sh 'kubectl rollout status deployment.v1.apps/security-server-sidecar-provider-fi'
            }
        }
    }
}